# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type SubInfoObject {
  subTitle: String!
  originalTitle: String!
  itemPage: Float!
  weight: Float!
  sizeDepth: Float!
  sizeHeight: Float!
  sizeWidth: Float!
}

type Item {
  isbn13: String!
  title: String!
  author: String!
  description: String!
  cover: String!
  categoryId: Float!
  categoryName: String!
  pubDate: String!
  publisher: String!
  priceStandard: Float!
  customerReviewRank: Float!
}

type BookSearchResult {
  hasNext: Boolean!
  items: [Item!]!
}

type User {
  id: String!
  role: UserRole!
  email: String!
  nickname: String!
  profileImage: String!
  bio: String!
}

"""The roles of the user"""
enum UserRole {
  ADMIN
  USER
}

type Count {
  userLiked: Int!
}

type Report {
  id: String!
  title: String!
  content: String!
  tags: [String!]
  createdAt: DateTime!
  updatedAt: DateTime!
  _count: Count!
  book: BookObject!
  user: User!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type BookObject {
  isbn13: String!
  title: String!
  author: String!
  description: String!
  cover: String!
  categoryId: Int!
  categoryName: String!
  pubDate: String!
  publisher: String!
  priceStandard: Int!
  customerReviewRank: Int!
  subInfo: SubInfoObject!
}

input SubInfoInput {
  subTitle: String!
  originalTitle: String!
  itemPage: Float!
  weight: Float!
  sizeDepth: Float!
  sizeHeight: Float!
  sizeWidth: Float!
}

type Query {
  getReport(reportId: String!): Report!
  getBook(isbn13: String!): BookObject!
  getBookList(bookSearchInput: BookSearchInput!): BookSearchResult!
}

input BookSearchInput {
  keyword: String!
  skip: Float!
  take: Float!
}

type Mutation {
  createReport(reportInput: ReportInput!): Report!
  deleteReport(reportId: String!): Report!
  updateReport(reportUpdateInput: ReportUpdateInput!, reportId: String!): Report!
  createBook(bookInput: BookInput!): BookObject!
}

input ReportInput {
  isbn13: String!
  title: String!
  content: String!
  tags: [String!]
}

input ReportUpdateInput {
  title: String
  content: String
  tags: [String!]
}

input BookInput {
  isbn13: String!
  title: String!
  author: String!
  description: String!
  cover: String!
  categoryId: Int!
  categoryName: String!
  pubDate: String!
  publisher: String!
  priceStandard: Int!
  customerReviewRank: Int!
  subInfo: SubInfoInput!
}